INET(3N)							      INET(3N)



NNAAMMEE
       inet_addr,    inet_network,   inet_ntoa,	  inet_makeaddr,   inet_lnaof,
       inet_netof - Internet address manipulation routines

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ssoocckkeett..hh>>
       ##iinncclluuddee	<<nneettiinneett//iinn..hh>>
       ##iinncclluuddee	<<aarrppaa//iinneett..hh>>

       uunnssiiggnneedd	lloonngg iinneett__aaddddrr((ccpp))
       cchhaarr **ccpp;;

       uunnssiiggnneedd	lloonngg iinneett__nneettwwoorrkk((ccpp))
       cchhaarr **ccpp;;

       cchhaarr **iinneett__nnttooaa((iinn))
       ssttrruucctt iinn__aaddddrr iinn;;

       ssttrruucctt iinn__aaddddrr iinneett__mmaakkeeaaddddrr((nneett,, llnnaa))
       lloonngg nneett,, llnnaa;;

       lloonngg iinneett__llnnaaooff((iinn))
       ssttrruucctt iinn__aaddddrr iinn;;

       lloonngg iinneett__nneettooff((iinn))
       ssttrruucctt iinn__aaddddrr iinn;;

DDEESSCCRRIIPPTTIIOONN
       The  routines  _i_n_e_t___a_d_d_r	 and  _i_n_e_t___n_e_t_w_o_r_k  each  interpret  character
       strings	representing  numbers  expressed  in the Internet standard "."
       notation, returning numbers suitable for	use as Internet	addresses  and
       Internet	network	numbers, respectively.	The routine _i_n_e_t___n_t_o_a takes an
       Internet	address	and returns an ASCII string representing  the  address
       in  "."	notation.  The routine _i_n_e_t___m_a_k_e_a_d_d_r takes an Internet network
       number and a local network address and constructs an  Internet  address
       from  it.   The routines	_i_n_e_t___n_e_t_o_f and _i_n_e_t___l_n_a_o_f break	apart Internet
       host addresses, returning the network number and	local network  address
       part, respectively.

       All  Internet address are returned in network order (bytes ordered from
       left to right).	All  network  numbers  and  local  address  parts  are
       returned	as machine format integer values.

IINNTTEERRNNEETT AADDDDRREESSSSEESS
       Values  specified  using	 the  "."  notation  take one of the following
       forms:
	      a.b.c.d
	      a.b.c
	      a.b
	      a
       When four parts are specified, each is interpreted as a	byte  of  data
       and  assigned,  from  left  to  right, to the four bytes	of an Internet
       address.	 Note that when	an Internet address  is	 viewed	 as  a	32-bit
       integer	quantity  on  the  VAX	the  bytes referred to above appear as
       "d.c.b.a".  That	is, VAX	bytes are ordered from right to	left.

       When a three part address is specified, the last	part is	interpreted as
       a 16-bit	quantity and placed in the right most two bytes	of the network
       address.	 This makes the	three part address format convenient for spec-
       ifying Class B network addresses	as "128.net.host".

       When  a two part	address	is supplied, the last part is interpreted as a
       24-bit quantity and placed in the right most three bytes	of the network
       address.	  This makes the two part address format convenient for	speci-
       fying Class A network addresses as "net.host".

       When only one part is given, the	value is stored	directly in  the  net-
       work address without any	byte rearrangement.

       All  numbers  supplied  as  "parts"  in	a "." notation may be decimal,
       octal, or hexadecimal, as specified in the C language (i.e., a  leading
       0x  or  0X  implies  hexadecimal; otherwise, a leading 0	implies	octal;
       otherwise, the number is	interpreted as decimal).

SSEEEE AALLSSOO
       gethostbyname(3N), getnetent(3N), hosts(5), networks(5),

DDIIAAGGNNOOSSTTIICCSS
       The value -1 is returned	by _i_n_e_t___a_d_d_r and  _i_n_e_t___n_e_t_w_o_r_k	for  malformed
       requests.

BBUUGGSS
       The  problem of host byte ordering versus network byte ordering is con-
       fusing.	A simple way to	specify	Class C	network	addresses in a	manner
       similar to that for Class B and Class A is needed.  The string returned
       by _i_n_e_t___n_t_o_a resides in a static	memory area.
       Inet_addr should	return a struct	in_addr.



4.2 Berkeley Distribution	 May 27, 1986			      INET(3N)
