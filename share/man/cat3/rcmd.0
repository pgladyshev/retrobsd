RCMD(3)			   Library Functions Manual		       RCMD(3)



NNAAMMEE
       rcmd,  rresvport, ruserok - routines for	returning a stream to a	remote
       command

SSYYNNOOPPSSIISS
       rreemm == rrccmmdd((aahhoosstt,, iinnppoorrtt,, llooccuusseerr,, rreemmuusseerr,, ccmmdd,,	ffdd22pp));;
       cchhaarr ****aahhoosstt;;
       iinntt iinnppoorrtt;;
       cchhaarr **llooccuusseerr,, **rreemmuusseerr,,	**ccmmdd;;
       iinntt **ffdd22pp;;

       ss == rrrreessvvppoorrtt((ppoorrtt));;
       iinntt **ppoorrtt;;

       rruusseerrookk((rrhhoosstt,, ssuuppeerruusseerr,, rruusseerr,,	lluusseerr));;
       cchhaarr **rrhhoosstt;;
       iinntt ssuuppeerruusseerr;;
       cchhaarr **rruusseerr,, **lluusseerr;;

DDEESSCCRRIIPPTTIIOONN
       _R_c_m_d is a routine used by the super-user	to  execute  a	command	 on  a
       remote  machine	using  an authentication scheme	based on reserved port
       numbers.	 _R_r_e_s_v_p_o_r_t is a	routine	which returns a	descriptor to a	socket
       with  an	 address  in  the privileged port space.  _R_u_s_e_r_o_k is a routine
       used by servers to authenticate clients requesting service  with	 _r_c_m_d.
       All  three  functions  are present in the same file and are used	by the
       _r_s_h_d(8C)	server (among others).

       _R_c_m_d looks up the host _*_a_h_o_s_t using _g_e_t_h_o_s_t_b_y_n_a_m_e(3N), returning	-1  if
       the  host does not exist.  Otherwise _*_a_h_o_s_t is set to the standard name
       of the host and a connection is established to a	server residing	at the
       well-known Internet port	_i_n_p_o_r_t.

       If  the	connection  succeeds,  a socket	in the Internet	domain of type
       SOCK_STREAM is returned to the caller, and given	to the remote  command
       as ssttddiinn	and ssttddoouutt.  If	_f_d_2_p is	non-zero, then an auxiliary channel to
       a control process will be set up, and  a	 descriptor  for  it  will  be
       placed  in  _*_f_d_2_p.   The	 control process will return diagnostic	output
       from the	command	(unit 2) on this channel, and will also	 accept	 bytes
       on  this	 channel  as being UNIX	signal numbers,	to be forwarded	to the
       process group of	the command.  If _f_d_2_p is 0, then the ssttddeerrrr (unit 2 of
       the  remote  command) will be made the same as the ssttddoouutt and no	provi-
       sion is made for	sending	 arbitrary  signals  to	 the  remote  process,
       although	 you  may  be  able  to	get its	attention by using out-of-band
       data.

       The protocol is described in detail in _r_s_h_d(8C).

       The _r_r_e_s_v_p_o_r_t routine is	used to	obtain	a  socket  with	 a  privileged
       address	bound to it.  This socket is suitable for use by _r_c_m_d and sev-
       eral other routines.  Privileged	Internet ports are those in the	 range
       0  to  1023.  Only the super-user is allowed to bind an address of this
       sort to a socket.

       _R_u_s_e_r_o_k takes a remote host's name, as returned by a  _g_e_t_h_o_s_t_b_y_a_d_d_r(3N)
       routine,	 two user names	and a flag indicating whether the local	user's
       name  is	 that  of  the	super-user.   It   then	  checks   the	 files
       _/_e_t_c_/_h_o_s_t_s_._e_q_u_i_v	 and,  possibly, _._r_h_o_s_t_s in the	current	working	direc-
       tory (normally the local	user's home directory) to see if  the  request
       for  service is allowed.	 A 0 is	returned if the	machine	name is	listed
       in the ``hosts.equiv'' file, or the host	and remote user	name are found
       in  the	``.rhosts''  file; otherwise _r_u_s_e_r_o_k returns -1.  If the _s_u_p_e_-
       _r_u_s_e_r flag is 1,	the checking of	the ``host.equiv'' file	 is  bypassed.
       If  the	local  domain (as obtained from	_g_e_t_h_o_s_t_n_a_m_e(2))	is the same as
       the remote domain, only the machine name	need be	specified.

SSEEEE AALLSSOO
       rlogin(1C),  rsh(1C),  intro(2),	 rexec(3),  rexecd(8C),	  rlogind(8C),
       rshd(8C)

DDIIAAGGNNOOSSTTIICCSS
       _R_c_m_d  returns  a	 valid socket descriptor on success.  It returns -1 on
       error and prints	a diagnostic message on	the standard error.

       _R_r_e_s_v_p_o_r_t returns a valid, bound	 socket	 descriptor  on	 success.   It
       returns	-1  on	error with the global value _e_r_r_n_o set according	to the
       reason for failure.  The	error code EAGAIN is overloaded	to mean	 ``All
       network ports in	use.''



4.2 Berkeley Distribution	 May 14, 1986			       RCMD(3)
