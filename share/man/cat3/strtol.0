STRTOL(3)		   Library Functions Manual		     STRTOL(3)



NNAAMMEE
       ssttrrttooll -	convert	string value to	a long

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssttddlliibb..hh>>
       ##iinncclluuddee	<<lliimmiittss..hh>>

       lloonngg
       ssttrrttooll(nptr, endptr, base)
       _c_h_a_r _*_n_p_t_r_;
       _c_h_a_r _*_*_e_n_d_p_t_r_;
       _i_n_t _b_a_s_e_;

DDEESSCCRRIIPPTTIIOONN
       The ssttrrttooll() function converts the string in _n_p_t_r to a _l_o_n_g value.  The
       conversion is done according to the given _b_a_s_e, which must be between 2
       and 36 inclusive, or be the special value 0.

       The string may begin with an arbitrary amount of	white space (as	deter-
       mined by	isspace(3)) followed by	a single optional `+' or `-' sign.  If
       _b_a_s_e  is	zero or	16, the	string may then	include	a `0x' prefix, and the
       number will be read in base 16; otherwise, a zero _b_a_s_e is taken	as  10
       (decimal)  unless  the next character is	`0', in	which case it is taken
       as 8 (octal).

       The remainder of	the string is converted	to a _l_o_n_g value	in the obvious
       manner,	stopping  at the first character which is not a	valid digit in
       the given base.	(In bases above	10, the	letter `A' in either upper  or
       lower  case  represents	10,  `B' represents 11,	and so forth, with `Z'
       representing 35.)

       If _e_n_d_p_t_r is non	nil, ssttrrttooll() stores the address of the	first  invalid
       character  in  _*_e_n_d_p_t_r _.	 If there were no digits at all, however, ssttrr--
       ttooll() stores the	original value of _n_p_t_r in _*_e_n_d_p_t_r.  (Thus, if _*_n_p_t_r is
       not `\0'	but _*_*_e_n_d_p_t_r is	`\0' on	return,	the entire string was valid.)

RREETTUURRNN VVAALLUUEESS
       The  ssttrrttooll() function returns the result of the	conversion, unless the
       value would underflow or	overflow.  If an  underflow  occurs,  ssttrrttooll()
       returns	LLOONNGG__MMIINN.   If	an overflow occurs, ssttrrttooll() returns LLOONNGG__MMAAXX.
       In both cases, eerrrrnnoo is set to EERRAANNGGEE ..

EERRRROORRSS
       [ERANGE]	      The given	string was out of range; the  value  converted
		      has been clamped.

SSEEEE AALLSSOO
       atof(3),	atoi(3), atol(3), strtoul(3)

SSTTAANNDDAARRDDSS
       The ssttrrttooll() function conforms to ANSI C	X3.159-1989 (``ANSI C'').

BBUUGGSS
       Ignores the current locale.



4.4 Berkeley Distribution      January 12, 1996			     STRTOL(3)
