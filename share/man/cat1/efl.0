EFL(1)			    General Commands Manual			EFL(1)



NNAAMMEE
       efl - Extended Fortran Language

SSYYNNOOPPSSIISS
       eeffll [ option ...	] [ filename ... ]

DDEESSCCRRIIPPTTIIOONN
       _E_f_l  compiles a program written in the EFL language into	clean Fortran.
       _E_f_l provides the	same control flow constructs as	does _r_a_t_f_o_r(1),	 which
       are essentially identical to those in C:

       statement grouping with braces;
	      decision-making  with  if, if-else, and switch-case; while, for,
	      Fortran do, repeat, and repeat...until loops; multi-level	 break
	      and next.	 In addition, EFL has C-like data structures, and more
	      uniform and convenient input/output syntax,  generic  functions.
	      EFL  also	 provides some syntactic sugar to make programs	easier
	      to read and write:

       free form input:
	      multiple statements/line;	automatic continuation statement label
	      names (not just numbers),

       comments:
	      #	this is	a comment

       translation of relationals:
	      >, >=, etc., become .GT.,	.GE., etc.

       return (expression)
	      returns expression to caller from	function

       define:
	      define name replacement

       include:
	      include filename

       The  Efl	 command option	--ww suppresses warning messages.	 The option --CC
       causes comments to be copied through to the Fortran  output  (default);
       --##  prevents comments from being	copied through.	 If a command argument
       contains	an embedded equal sign,	that argument is treated as if it  had
       appeared	 in  an	ooppttiioonn statement at the	beginning of the program.  _E_f_l
       is best used with _f_7_7(1).

SSEEEE AALLSSOO
       f77(1), ratfor(1).
       S. I. Feldman, _T_h_e _P_r_o_g_r_a_m_m_i_n_g _L_a_n_g_u_a_g_e _E_F_L, Bell Labs  Computing  Sci-
       ence Technical Report #78.



7th Edition			April 29, 1985				EFL(1)
