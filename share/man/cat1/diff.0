DIFF(1)			    General Commands Manual		       DIFF(1)



NNAAMMEE
       diff - differential file	and directory comparator

SSYYNNOOPPSSIISS
       ddiiffff [ --ll ] [ --rr	] [ --ss ] [ --cceeffhhnn ] [ --bbiiwwtt ] dir1 dir2
       ddiiffff [ --cceeffhhnn ]] [[ --bbiiwwtt ] file1 file2
       ddiiffff [ --DD_s_t_r_i_n_g ] [ --bbiiww	] file1	file2

DDEESSCCRRIIPPTTIIOONN
       If  both	 arguments  are	 directories,  _d_i_f_f  sorts the contents	of the
       directories by name, and	then runs  the	regular	 file  _d_i_f_f  algorithm
       (described  below)  on  text  files  which are different.  Binary files
       which differ, common subdirectories, and	files which appear in only one
       directory are listed.  Options when comparing directories are:

       --ll     long  output  format; each text file _d_i_f_f	is piped through _p_r(1)
	      to paginate it, other differences	are remembered and  summarized
	      after all	text file differences are reported.

       --rr     causes  application of _d_i_f_f recursively to common	subdirectories
	      encountered.

       --ss     causes _d_i_f_f to report files which	are the	same, which are	other-
	      wise not mentioned.

       --SSnnaammee starts a directory _d_i_f_f in the middle beginning with file	_n_a_m_e_.

       When  run  on regular files, and	when comparing text files which	differ
       during directory	comparison, _d_i_f_f tells what lines must be  changed  in
       the  files to bring them	into agreement.	 Except	in rare	circumstances,
       _d_i_f_f finds a smallest sufficient	set of file differences.   If  neither
       _f_i_l_e_1  nor  _f_i_l_e_2  is  a	directory, then	either may be given as `-', in
       which case the standard input is	used.  If _f_i_l_e_1	is a directory,	then a
       file  in	that directory whose file-name is the same as the file-name of
       _f_i_l_e_2 is	used (and vice versa).

       There are several options for output format; the	default	output	format
       contains	lines of these forms:

	    _n_1 a _n_3_,_n_4
	    _n_1_,_n_2 d _n_3
	    _n_1_,_n_2 c _n_3_,_n_4

       These lines resemble _e_d commands	to convert _f_i_l_e_1 into _f_i_l_e_2.  The num-
       bers after the letters pertain to _f_i_l_e_2.	 In fact,  by  exchanging  `a'
       for  `d'	 and reading backward one may ascertain	equally	how to convert
       _f_i_l_e_2 into _f_i_l_e_1.  As in	_e_d_, identical pairs where _n_1 = _n_2 or _n_3	 =  _n_4
       are abbreviated as a single number.

       Following  each	of these lines come all	the lines that are affected in
       the first file flagged by `<', then all the lines that are affected  in
       the second file flagged by `>'.

       Except  for --bb,, --ww,, --ii or --tt which may be given with any	of the others,
       the following options are mutually exclusive:

       --ee	produces a script of _a_,	_c and _d	commands for  the  editor  _e_d_,
		which  will recreate _f_i_l_e_2 from	_f_i_l_e_1.	In connection with --ee,
		the following shell program may	help  maintain	multiple  ver-
		sions  of  a file.  Only an ancestral file ($1)	and a chain of
		version-to-version _e_d scripts ($2,$3,...) made by _d_i_f_f need be
		on hand.  A `latest version' appears on	the standard output.

			(shift;	cat $*;	echo '1,$p') | ed - $1

		Extra commands are added to the	output when comparing directo-
		ries with --ee,, so that the result is a _s_h(1)  script  for  con-
		verting	 text  files  which  are common	to the two directories
		from their state in _d_i_r_1 to their state	in _d_i_r_2_.

       --ff	produces a script similar to that of --ee,, not useful  with  _e_d_,
		and in the opposite order.

       --nn	produces  a  script similar to that of --ee,, but in the opposite
		order and with a count of changed  lines  on  each  insert  or
		delete command.	 This is the form used by _r_c_s_d_i_f_f(1).

       --cc	produces  a  diff  with	 lines	of context.  The default is to
		present	3 lines	of context and may be changed, e.g to  10,  by
		--cc1100.	With  --cc  the  output format is	modified slightly: the
		output beginning with identification of	the files involved and
		their  creation	 dates	and then each change is	separated by a
		line with a dozen *'s.	 The  lines  removed  from  _f_i_l_e_1  are
		marked with `- '; those	added to _f_i_l_e_2 are marked `+ '.	 Lines
		which are changed from one file	to the	other  are  marked  in
		both files with	with `!	'.

		Changes	 which	lie  within  <context> lines of	each other are
		grouped	together on output.  (This is a	change from the	previ-
		ous  ``diff -c'' but the resulting output is usually much eas-
		ier to interpret.)

       --hh	does a fast, half-hearted job.	It  works  only	 when  changed
		stretches are short and	well separated,	but does work on files
		of unlimited length.

       --DDssttrriinngg	causes _d_i_f_f to create a	merged version of _f_i_l_e_1	and  _f_i_l_e_2  on
		the  standard output, with C preprocessor controls included so
		that a compilation of the result without  defining  _s_t_r_i_n_g  is
		equivalent  to	compiling  _f_i_l_e_1_,  while  defining _s_t_r_i_n_g will
		yield _f_i_l_e_2_.

       --bb	causes trailing	blanks (spaces and tabs) to  be	 ignored,  and
		other strings of blanks	to compare equal.

       --ww	is similar to --bb but causes whitespace (blanks and tabs) to be
		totally	ignored.  E.g.,	``if ( a == b )'' will	compare	 equal
		to ``if(a==b)''.

       --ii	ignores	 the  case of letters.	E.g., ``A'' will compare equal
		to ``a''.

       --tt	will expand tabs in output lines.  Normal or  --cc  output  adds
		character(s)  to the front of each line	which may screw	up the
		indentation of the original source lines and make  the	output
		listing	difficult to interpret.	 This option will preserve the
		original source's indentation.

FFIILLEESS
       /tmp/d?????
       /usr/libexec/diffh for --hh
       /bin/diff for directory diffs
       /bin/pr

SSEEEE AALLSSOO
       cmp(1), cc(1), comm(1), ed(1), diff3(1)

DDIIAAGGNNOOSSTTIICCSS
       Exit status is 0	for no differences, 1 for some,	2 for trouble.

BBUUGGSS
       Editing scripts produced	under the --ee or	--ff option are naive about cre-
       ating lines consisting of a single `..'.

       When  comparing	directories  with  the --bb,, --ww or --ii options specified,
       _d_i_f_f first compares the files ala _c_m_p_, and then decides to run the _d_i_f_f
       algorithm if they are not equal.	 This may cause	a small	amount of spu-
       rious output if the files then turn out to  be  identical  because  the
       only differences	are insignificant blank	string or case differences.



4th Berkeley Distribution      October 21, 1996			       DIFF(1)
