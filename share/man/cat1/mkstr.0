MKSTR(1)		    General Commands Manual		      MKSTR(1)



NNAAMMEE
       mkstr - create an error message file by massaging C source

SSYYNNOOPPSSIISS
       mmkkssttrr [ -- ] messagefile prefix file ...

DDEESSCCRRIIPPTTIIOONN
       _M_k_s_t_r is	used to	create files of	error messages.	 Its use can make pro-
       grams with large	numbers	of error diagnostics much smaller, and	reduce
       system  overhead	 in  running  the program as the error messages	do not
       have to be constantly swapped in	and out.

       _M_k_s_t_r will process each of the specified	_f_i_l_e_s_, placing a massaged ver-
       sion  of	 the input file	in a file whose	name consists of the specified
       _p_r_e_f_i_x and the original name.  A	typical	usage of _m_k_s_t_r would be

	    mkstr pistrings xx *.c

       This command would cause	all the	error messages from the	C source files
       in  the	current	 directory to be placed	in the file _p_i_s_t_r_i_n_g_s and pro-
       cessed copies of	the source for these files to be placed	in files whose
       names are prefixed with _x_x_.

       To  process  the	error messages in the source to	the message file _m_k_s_t_r
       keys on the string `error("' in the input stream.  Each time it occurs,
       the C string starting at	the `"'	is placed in the message file followed
       by a null character and a new-line character; the null character	termi-
       nates the message so it can be easily used when retrieved, the new-line
       character makes it possible to sensibly _c_a_t the error message  file  to
       see  its	contents.  The massaged	copy of	the input file then contains a
       _l_s_e_e_k pointer into the file which can be	used to	retrieve the  message,
       i.e.:

	      cchhaarr efilname[] =	 "/usr/share/pascal/pi_strings";
	      iinntt  efil	= -1;

	      error(a1,	a2, a3,	a4)
	      {
		   cchhaarr	buf[256];

		   iiff (efil < 0) {
			efil = open(efilname, 0);
			iiff (efil < 0) {
	      oops:
			     perror(efilname);
			     exit(1);
			}
		   }
		   iiff (lseek(efil, (long) a1, 0) || read(efil, buf, 256) <= 0)
			ggoottoo oops;
		   printf(buf, a2, a3, a4);
	      }

       The optional -- causes the error messages	to be placed at	the end	of the
       specified message file for recompiling part of a	large _m_k_s_t_red program.

SSEEEE AALLSSOO
       lseek(2), xstr(1)



3rd Berkeley Distribution      October 22, 1996			      MKSTR(1)
