KILL(1)			    General Commands Manual		       KILL(1)



NNAAMMEE
       kill - terminate	a process with extreme prejudice

SSYYNNOOPPSSIISS
       kkiillll [ --sig ] processid ...
       kkiillll --ll

DDEESSCCRRIIPPTTIIOONN
       _K_i_l_l  sends the TERM (terminate,	15) signal to the specified processes.
       If a signal name	or number preceded by `-' is given as first  argument,
       that  signal  is	sent instead of	terminate (see _s_i_g_v_e_c(2)).  The	signal
       names are listed	by `kill -l', and are as  given	 in  _/_u_s_r_/_i_n_c_l_u_d_e_/_s_i_g_-
       _n_a_l_._h_, stripped of the common SIG prefix.

       The  terminate signal will kill processes that do not catch the signal;
       `kill -9	...' is	a sure kill, as	the KILL (9) signal cannot be  caught.
       By  convention,	if  process  number 0 is specified, all	members	in the
       process group (i.e. processes resulting from  the  current  login)  are
       signaled	 (but beware: this works only if you use _s_h(1);	not if you use
       _c_s_h(1).)	 Negative process numbers  also	 have  special	meanings;  see
       _k_i_l_l(2) for details.

       The  killed  processes must belong to the current user unless he	is the
       super-user.

       The process number of an	 asynchronous  process	started	 with  `&'  is
       reported	 by  the  shell.   Process  numbers can	also be	found by using
       _p_s(1).  _K_i_l_l is a built-in to _c_s_h(1); it	allows job specifiers  of  the
       form  ``%...''  as  arguments  so process id's are not as often used as
       _k_i_l_l arguments.	See _c_s_h(1) for details.

SSEEEE AALLSSOO
       csh(1), ps(1), kill(2), sigvec(2)

BBUUGGSS
       A replacement for ``kill	0'' for	_c_s_h(1) users should be provided.



4th Berkeley Distribution	April 20, 1986			       KILL(1)
