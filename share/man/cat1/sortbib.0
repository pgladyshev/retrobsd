SORTBIB(1)		    General Commands Manual		    SORTBIB(1)



NNAAMMEE
       sortbib - sort bibliographic database

SSYYNNOOPPSSIISS
       ssoorrttbbiibb [ --ssKEYS	] database  ...

DDEESSCCRRIIPPTTIIOONN
       _S_o_r_t_b_i_b	sorts  files  of records containing _r_e_f_e_r key-letters by user-
       specified keys.	Records	may be separated by blank lines, or by .[  and
       .] delimiters, but the two styles may not be mixed together.  This pro-
       gram reads through each _d_a_t_a_b_a_s_e	and pulls out key  fields,  which  are
       sorted  separately.   The  sorted  key fields contain the file pointer,
       byte offset, and	length of corresponding	records.   These  records  are
       delivered  using	 disk seeks and	reads, so _s_o_r_t_b_i_b may not be used in a
       pipeline	to read	standard input.

       By default, _s_o_r_t_b_i_b alphabetizes	by the first %A	 and  the  %D  fields,
       which  contain  the  senior  author and date.  The --ss option is used to
       specify new _K_E_Y_S.  For instance,	--ssATD will sort	by author, title,  and
       date,  while  --ssA+D will	sort by	all authors, and date.	Sort keys past
       the fourth are not meaningful.  No more than 16 databases may be	sorted
       together	 at  one  time.	  Records  longer than 4096 characters will be
       truncated.

       _S_o_r_t_b_i_b sorts on	the last word on the %A	line, which is assumed	to  be
       the  author's last name.	 A word	in the final position, such as ``jr.''
       or ``ed.'', will	be ignored if the name beforehand ends with  a	comma.
       Authors with two-word last names	or unusual constructions can be	sorted
       correctly by using the _n_r_o_f_f convention ``\0'' in place of a blank.   A
       %Q field	is considered to be the	same as	%A, except sorting begins with
       the first, not the last,	word.  _S_o_r_t_b_i_b sorts on	the last word  of  the
       %D  line,  usually  the	year.	It also	ignores	leading	articles (like
       ``A'' or	``The'') when sorting by titles	in the %T  or  %J  fields;  it
       will  ignore  articles of any modern European language.	If a sort-sig-
       nificant	field is absent	from a	record,	 _s_o_r_t_b_i_b  places  that	record
       before other records containing that field.

SSEEEE AALLSSOO
       refer(1), addbib(1), roffbib(1),	indxbib(1), lookbib(1)

AAUUTTHHOORRSS
       Greg Shenaut, Bill Tuthill

BBUUGGSS
       Records with missing author fields should probably be sorted by title.



4.2 Berkeley Distribution	April 29, 1985			    SORTBIB(1)
