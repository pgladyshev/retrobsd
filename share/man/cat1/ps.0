PS(1)			    General Commands Manual			 PS(1)



NNAAMMEE
       ps - process status

SSYYNNOOPPSSIISS
       ppss [ aaccggkkllnnrrttuuwwxxUU## [ core [ swap	[ system ] ] ] ]

DDEESSCCRRIIPPTTIIOONN
       _P_s  prints  certain  indicia about active processes.  To	get a complete
       printout	on the console or lpr, use ``ps	axlw'' For a quick snapshot of
       system  activity,  ``ps au''  is	 recommended.	A  hyphen  may precede
       options with no effect.	The following options may be specified.

       aa      asks for information about all processes with  terminals	(ordi-
	      narily only one's	own processes are displayed).

       cc      causes  only the _c_o_m_m field to be	displayed instead of the argu-
	      ments.  (The comm	field is the tail of the path name of the file
	      the  process  last  exec'ed.)  This option speeds	up _p_s somewhat
	      and reduces the amount of	output.	  It  is  also	more  reliable
	      since the	process	can't scribble on top of it.

       gg      asks  for	 all  processes.   Without this	option,	_p_s only	prints
	      ``interesting'' processes.  Processes are	deemed to be  uninter-
	      esting  if they are process group	leaders, or if their arguments
	      begin with a `-'.	 This normally	eliminates  shells  and	 getty
	      processes.

       kk      causes  the file _/_u_s_r_/_s_y_s_/_c_o_r_e is	used in	place of _/_d_e_v_/_k_m_e_m and
	      _/_d_e_v_/_m_e_m_.	 This is used for postmortem system debugging.

       ll      asks for a long listing.	The short listing  contains  the  user
	      name,  process  ID,  tty,	 the  cumulative execution time	of the
	      process and an approximation to the command line.

       nn      asks for numeric rather than symbolic wchans.  This flag implies
	      the ``l''	flag.

       rr      asks  for	 ``raw''  output.   A  non-human  readable sequence of
	      structures is output on  the  standard  output.	There  is  one
	      structure	for each process, the format is	defined	by <psout.h>

       tt_t_t_y_n_a_m_e
	      restricts	output to processes whose controlling tty is the spec-
	      ified ttyname (which should  be  specified  as  printed  by  _p_s_,
	      including	 _t_?   for processes with no tty).  This	option must be
	      the last one given.

       uu      A	user oriented output is	produced.  This	includes the  name  of
	      the owner	of the process,	process	id, nice value,	size, tty, cpu
	      time used, and the command.

       ww      tells _p_s you are on a wide terminal (132 columns).  _P_s  normally
	      assumes  you  are	on an 80 column	terminal.  This	information is
	      used to decide how much of long commands to print.  The ww	option
	      may  be  repeated,  e.g.	 wwww,, and the entire command, up	to 128
	      characters, will be printed without regard to terminal width.

       xx      asks even	about processes	with no	terminal.

       UU      causes ps	to update a private database  where  is	 keeps	system
	      information.   Thus  ``ps	-U'' should be included	in the /etc/rc
	      file.

       ##      A	process	number may be given, (indicated	here by	#),  in	 which
	      case the output is restricted to that process.  This option must
	      also be last.

       A second	argument tells _p_s where	to look	for _c_o_r_e if the	 _k  option  is
       given,  instead	of  /usr/sys/core.   A third argument is the name of a
       swap file to use	instead	of the default /dev/swap.  If a	 fourth	 argu-
       ment  is	 given,	 it  is	 taken	to be the file containing the system's
       namelist.  Otherwise, ``/unix'' is used.

       The output is sorted by tty, then by process ID.

       The long	listing	is columnar and	contains

       F      Flags associated with the	process.  These	are defined by #define
	      lines in /usr/include/sys/proc.h.

       S      The state	of the process.	 0: nonexistent; S: sleeping; W: wait-
	      ing; R: running; I: intermediate;	Z: terminated; T: stopped.

       UID    The user id of the process owner.

       PID    The process ID of	the process; as	in certain cults it is	possi-
	      ble to kill a process if you know	its true name.

       PPID   The process ID of	the parent process.

       CPU    Processor	utilization for	scheduling.

       PRI    The priority of the process; high	numbers	mean low priority.

       NICE   Used in priority computation.

       ADDR   The  memory  address  of	the process if resident, otherwise the
	      disk address.

       SZ     The size in blocks (512  bytes)  of  the	memory	image  of  the
	      process.

       WCHAN  The  event  for  which  the  process  is waiting or sleeping; if
	      blank, the process is running.

       TTY    The controlling tty for the process.

       TIME   The cumulative execution time for	the process.

       COMMAND
	      The command and its arguments.

       A process that has exited and has a parent, but has not yet been	waited
       for  by	the parent is marked <defunct>.	 _P_s makes an educated guess as
       to the file name	and arguments given when the process  was  created  by
       examining  memory  or the swap area.  The method	is inherently somewhat
       unreliable and in any event a  process  is  entitled  to	 destroy  this
       information, so the names cannot	be counted on too much.

FFIILLEESS
       /unix		   system namelist
       /dev/kmem	   kernel memory
       /dev/swap	   swap	device
       /usr/sys/core	   core	file
       /dev		   searched to find swap device	and tty	names
       /var/run/psdatabase system namelist and device information

SSEEEE AALLSSOO
       kill(1),	w(1), pstat(8)

BBUUGGSS
       Things  can  change while _p_s is running;	the picture it gives is	only a
       close approximation to reality.

       Some processes, typically those in the  background,  are	 printed  with
       null  or	 garbaged  arguments, even though the process has not swapped.
       (Sometimes ps even loses	on its own arguments!)	In  these  cases,  the
       name of the command is printed in parentheses.

       When automatic crash dumps are enabled, /usr/sys/core is	not a sensible
       default core file name.



3rd Berkeley Distribution						 PS(1)
