ACCESS(2)		      System Calls Manual		     ACCESS(2)



NNAAMMEE
       access -	determine accessibility	of file

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ffiillee..hh>>

       ##ddeeffiinnee RR__OOKK    44//** tteesstt	ffoorr rreeaadd ppeerrmmiissssiioonn **//
       ##ddeeffiinnee WW__OOKK    22//** tteesstt	ffoorr wwrriittee ppeerrmmiissssiioonn **//
       ##ddeeffiinnee XX__OOKK    11//** tteesstt	ffoorr eexxeeccuuttee ((sseeaarrcchh)) ppeerrmmiissssiioonn	**//
       ##ddeeffiinnee FF__OOKK    00//** tteesstt	ffoorr pprreesseennccee ooff	ffiillee **//

       aacccceessssiibbllee == aacccceessss((ppaatthh,, mmooddee))
       iinntt aacccceessssiibbllee;;
       cchhaarr **ppaatthh;;
       iinntt mmooddee;;

DDEESSCCRRIIPPTTIIOONN
       _A_c_c_e_s_s  checks the given	file _p_a_t_h for accessibility according to _m_o_d_e,
       which is	an inclusive or	of the bits R_OK, W_OK and  X_OK.   Specifying
       _m_o_d_e  as	 F_OK  (i.e.,  0) tests	whether	the directories	leading	to the
       file can	be searched and	the file exists.

       The real	user ID	and the	group access list (including  the  real	 group
       ID) are used in verifying permission, so	this call is useful to set-UID
       programs.

       Notice that only	access bits are	checked.  A directory may be indicated
       as  writable by _a_c_c_e_s_s, but an attempt to open it for writing will fail
       (although files may be created there); a	file may look executable,  but
       _e_x_e_c_v_e will fail	unless it is in	proper format.

RREETTUURRNN VVAALLUUEE
       If _p_a_t_h cannot be found or if any of the	desired	access modes would not
       be granted, then	a -1  value  is	 returned;  otherwise  a  0  value  is
       returned.

EERRRROORRSS
       Access to the file is denied if one or more of the following are	true:

       [ENOTDIR]      A	component of the path prefix is	not a directory.

       [EINVAL]	      The  pathname  contains  a character with	the high-order
		      bit set.

       [ENAMETOOLONG] A	component of a pathname	exceeded 255 characters, or an
		      entire path name exceeded	1023 characters.

       [ENOENT]	      The named	file does not exist.

       [EACCES]	      Search  permission is denied for a component of the path
		      prefix.

       [ELOOP]	      Too many symbolic	links were encountered in  translating
		      the pathname.

       [EROFS]	      Write access is requested	for a file on a	read-only file
		      system.

       [ETXTBSY]      Write access is requested	for a pure  procedure  (shared
		      text) file that is being executed.

       [EACCES]	      Permission  bits	of  the	 file  mode  do	not permit the
		      requested	access,	or search permission is	 denied	 on  a
		      component	 of  the path prefix.  The owner of a file has
		      permission checked with respect to the  ``owner''	 read,
		      write,  and  execute  mode  bits,	 members of the	file's
		      group other than the owner have permission checked  with
		      respect  to the ``group''	mode bits, and all others have
		      permissions checked with respect to the  ``other''  mode
		      bits.

       [EFAULT]	      _P_a_t_h  points  outside  the  process's  allocated address
		      space.

       [EIO]	      An I/O error occurred while reading from or  writing  to
		      the file system.

SSEEEE AALLSSOO
       chmod(2), stat(2)



4th Berkeley Distribution	 May 22, 1986			     ACCESS(2)
