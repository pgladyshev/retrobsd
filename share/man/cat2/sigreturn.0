SIGRETURN(2)		      System Calls Manual		  SIGRETURN(2)



NNAAMMEE
       sigreturn - return from signal

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssiiggnnaall..hh>>

       ssttrruucctt	 ssiiggccoonntteexxtt {{
	    iinntt	 sscc__oonnssttaacckk;;
	    lloonngg sscc__mmaasskk;;
	    iinntt	 sscc__sspp;;
	    iinntt	 sscc__ffpp;;
	    iinntt	 sscc__aapp;;
	    iinntt	 sscc__ppcc;;
	    iinntt	 sscc__ppss;;
       }};;

       ssiiggrreettuurrnn((ssccpp));;
       ssttrruucctt ssiiggccoonntteexxtt **ssccpp;;

DDEESSCCRRIIPPTTIIOONN
       _S_i_g_r_e_t_u_r_n  allows users to atomically unmask, switch stacks, and	return
       from a signal context.  The processes signal mask and stack status  are
       restored	 from the context.  The	system call does not return; the users
       stack pointer, frame pointer, argument pointer,	and  processor	status
       longword	are restored from the context.	Execution resumes at the spec-
       ified pc.  This system  call  is	 used  by  the	trampoline  code,  and
       _l_o_n_g_j_m_p(3)  when	 returning  from  a signal to the previously executing
       program.

NNOOTTEESS
       This system call	is not available in 4.2BSD, hence  it  should  not  be
       used if backward	compatibility is needed.

       The  definition	of  the	_s_i_g_c_o_n_t_e_x_t structure is	machine	dependent (the
       structure cited above is	that for a VAX	running	 4.3BSD);  no  program
       should  depend  on  its	internal  structure.  _S_e_t_j_m_p(3)	may be used to
       build sigcontext	structures in a	machine	independent manner.

RREETTUURRNN VVAALLUUEE
       If successful, the system call does not return.	Otherwise, a value  of
       -1 is returned and _e_r_r_n_o	is set to indicate the error.

EERRRROORRSS
       _S_i_g_r_e_t_u_r_n  will	fail  and the process context will remain unchanged if
       one of the following occurs.

       [EFAULT]	      _S_c_p points to memory that	is not a  valid	 part  of  the
		      process address space.

       [EINVAL]	      The  process status longword is invalid or would improp-
		      erly raise the privilege level of	the process.

SSEEEE AALLSSOO
       sigvec(2), setjmp(3)

NNOOTTEESS  ((PPDDPP--1111))
       On the PDP-11 the field _s_c___a_p (argument pointer)	does not exist and the
       field  _s_c___f_p  (frame pointer) is	the PDP-11 register _r_5.	 Additionally,
       three new fields	_s_c___r_0, _s_c___r_1 and _s_c___o_v_n_o are  present  on  the	PDP-11
       which  hold  register  values  r0 and r1	and the	text overlay number to
       restore (see _l_d(1)).

       ssttrruucctt  ssiiggccoonntteexxtt {{
	       iinntt   sscc__oonnssttaacckk;; //** ssiiggssttaacckk ssttaattee ttoo rreessttoorree **//
	       lloonngg  sscc__mmaasskk;;	 //** ssiiggnnaall mmaasskk	ttoo rreessttoorree **//
	       iinntt   sscc__sspp;;	 //** sspp ttoo rreessttoorree **//
	       iinntt   sscc__ffpp;;	 //** ffpp ttoo rreessttoorree **//
	       iinntt   sscc__rr11;;	 //** rr11 ttoo rreessttoorree **//
	       iinntt   sscc__rr00;;	 //** rr00 ttoo rreessttoorree **//
	       iinntt   sscc__ppcc;;	 //** ppcc ttoo rreessttoorree **//
	       iinntt   sscc__ppss;;	 //** ppssll	ttoo rreessttoorree **//
	       iinntt   sscc__oovvnnoo	 //** oovveerrllaayy ttoo rreessttoorree **//
       }};;



4.3 Berkeley Distribution	 June 30, 1985			  SIGRETURN(2)
