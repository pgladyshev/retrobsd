ACCEPT(2)		      System Calls Manual		     ACCEPT(2)



NNAAMMEE
       accept -	accept a connection on a socket

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee	<<ssyyss//ssoocckkeett..hh>>

       nnss == aacccceepptt((ss,, aaddddrr,, aaddddrrlleenn))
       iinntt nnss,, ss;;
       ssttrruucctt ssoocckkaaddddrr **aaddddrr;;
       iinntt **aaddddrrlleenn;;

DDEESSCCRRIIPPTTIIOONN
       The  argument _s is a socket that	has been created with _s_o_c_k_e_t(2), bound
       to an address with _b_i_n_d(2), and is listening for	 connections  after  a
       _l_i_s_t_e_n(2).   _A_c_c_e_p_t extracts the	first connection on the	queue of pend-
       ing connections,	creates	a new socket with the same properties of _s and
       allocates  a  new  file	descriptor, _n_s,	for the	socket.	 If no pending
       connections are present on the queue, and the socket is not  marked  as
       non-blocking,  _a_c_c_e_p_t  blocks the caller	until a	connection is present.
       If the socket is	marked non-blocking and	 no  pending  connections  are
       present	on the queue, _a_c_c_e_p_t returns an	error as described below.  The
       accepted	socket,	_n_s, may	not be used to accept more  connections.   The
       original	socket _s remains open.

       The  argument  _a_d_d_r  is	a  result parameter that is filled in with the
       address of the connecting entity, as known to the communications	layer.
       The  exact  format of the _a_d_d_r parameter	is determined by the domain in
       which the communication is occurring.  The _a_d_d_r_l_e_n  is  a  value-result
       parameter;  it  should initially	contain	the amount of space pointed to
       by _a_d_d_r;	on return it will contain the actual length (in	bytes) of  the
       address	returned.   This  call	is  used  with connection-based	socket
       types, currently	with SOCK_STREAM.

       It is possible to _s_e_l_e_c_t(2) a socket  for  the  purposes	 of  doing  an
       _a_c_c_e_p_t by selecting it for read.

RREETTUURRNN VVAALLUUEE
       The  call  returns -1 on	error.	If it succeeds,	it returns a non-nega-
       tive integer that is a descriptor for the accepted socket.

EERRRROORRSS
       The _a_c_c_e_p_t will fail if:

       [EBADF]		   The descriptor is invalid.

       [ENOTSOCK]	   The descriptor references a file, not a socket.

       [EOPNOTSUPP]	   The referenced socket is not	of type	SOCK_STREAM.

       [EFAULT]		   The _a_d_d_r parameter is not in	a writable part	of the
			   user	address	space.

       [EWOULDBLOCK]	   The	socket	is  marked non-blocking	and no connec-
			   tions are present to	be accepted.

SSEEEE AALLSSOO
       bind(2),	connect(2), listen(2), select(2), socket(2)



4.2 Berkeley Distribution	 May 22, 1986			     ACCEPT(2)
