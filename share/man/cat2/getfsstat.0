GETFSSTAT(2)		      System Calls Manual		  GETFSSTAT(2)



NNAAMMEE
       ggeettffssssttaatt - get list of all mounted filesystems

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ppaarraamm..hh>>
       ##iinncclluuddee	<<ssyyss//mmoouunntt..hh>>

       _i_n_t
       ggeettffssssttaatt(buf,bufsize,flags)
       _s_t_r_u_c_t _s_t_a_t_f_s _*_b_u_f_;
       _i_n_t _b_u_f_s_i_z_e_;
       _i_n_t _f_l_a_g_s_;

DDEESSCCRRIIPPTTIIOONN
       GGeettffssssttaatt()  returns information	about all mounted filesystems.	_B_u_f is
       a pointer to _s_t_a_t_f_s structures defined as follows:


       #define MNAMELEN	90	 /* length of buffer for returned name */

       struct statfs {
       short   f_type;		 /* type of filesystem (see below) */
       short   f_flags;		 /* copy of mount flags	*/
       short   f_bsize;		 /* fundamental	file system block size */
       short   f_iosize;	 /* optimal transfer block size	*/
       long    f_blocks;	 /* total data blocks in file system */
       long    f_bfree;		 /* free blocks	in fs */
       long    f_bavail;	 /* free blocks	avail to non-superuser */
       ino_t   f_files;		 /* total file nodes in	file system */
       ino_t   f_ffree;		 /* free file nodes in fs */
       u_long  f_fsid[2];	 /* file system	id */
       long    f_spare[4];	 /* spare for later */
       char    f_mntonname[MNAMELEN];	 /* mount point	*/
       char    f_mntfromname[MNAMELEN];	 /* mounted filesystem */
       };
       /*
       * File system types. - Only UFS is supported so the other types are not
       * given.
       */
       #define	 MOUNT_NONE	0
       #define	 MOUNT_UFS 1	/* Fast	Filesystem */

       Fields that are undefined for a particular filesystem are  set  to  -1.
       The  buffer  is filled with an array of _f_s_s_t_a_t structures, one for each
       mounted filesystem up to	the size specified by _b_u_f_s_i_z_e.

       If _b_u_f is given as NULL,	ggeettffssssttaatt() returns just the number of mounted
       filesystems.

       Normally	 _f_l_a_g_s	is  currently  unused.	In 4.4BSD systems the usage is
       specified as MNT_WAIT.  If _f_l_a_g_s	is set to MNT_NOWAIT, ggeettffssssttaatt() will
       return  the  information	 it has	available without requesting an	update
       from each filesystem.  Thus, some of the	information  will  be  out  of
       date,  but  ggeettffssssttaatt()	will  not block	waiting	for information	from a
       filesystem that is unable to respond.

RREETTUURRNN VVAALLUUEESS
       Upon  successful	 completion,  the  number  of  _f_s_s_t_a_t  structures   is
       returned.   Otherwise,  -1 is returned and the global variable _e_r_r_n_o is
       set to indicate the error.

EERRRROORRSS
       GGeettffssssttaatt() fails if one	or more	of the following are true:


       [EFAULT]		   _B_u_f points to an invalid address.

       [EIO]		   An I/O error	occurred while reading from or writing
			   to the filesystem.

SSEEEE AALLSSOO
       statfs(2), fstab(5), mount(8)

HHIISSTTOORRYY
       The ggeettffssssttaatt function first appeared in	4.4BSD.



4.4 Berkeley Distribution      December	24, 1995		  GETFSSTAT(2)
