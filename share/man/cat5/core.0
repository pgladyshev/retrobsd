CORE(5)			      File Formats Manual		       CORE(5)



NNAAMMEE
       core - format of	memory image file

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ppaarraamm..hh>>

DDEESSCCRRIIPPTTIIOONN
       The  UNIX System	writes out a memory image of a terminated process when
       any of various errors occur.  See _s_i_g_v_e_c(2) for the  list  of  reasons;
       the  most  common  are  memory  violations,  illegal  instructions, bus
       errors, and user-generated quit signals.	 The memory  image  is	called
       `core'  and  is written in the process's	working	directory (provided it
       can be; normal access controls apply).

       The core	file consists  of  the	_u_.   area,  whose  size	 (in  64  byte
       `clicks')  is  defined by the USIZE manifest in the <_s_y_s_/_p_a_r_a_m_._h> file.
       The _u_.  area starts with	a _u_s_e_r structure  as  given  in	 <_s_y_s_/_u_s_e_r_._h>.
       The  rest  of  the _u_.  area consists of the kernel stack	for the	termi-
       nated process which includes (among other things) the processor	regis-
       ters  at	 the time of the fault;	see the	system listings	for the	format
       of this area.  The remainder of the core	file  consists	first  of  the
       data  pages  and	then the stack pages of	the process image.  The	amount
       of data space image in the core file is given (in clicks) by the	 vari-
       able  _u___d_s_i_z_e  in the _u_.	 area.	If the text segment was	not write-only
       and and shared it is included as	the first  _e_t_e_x_t  bytes	 of  the  data
       image  where  _e_t_e_x_t  is	taken from the symbol table of the object file
       which generated the memory image.  The amount of	 stack	image  in  the
       core file is given (in clicks) by the variable _u___s_s_i_z_e in the _u_.	 area.

       In general the debugger _a_d_b(1) is sufficient to deal with core images.

SSEEEE AALLSSOO
       adb(1), sigvec(2), stack(5)



3rd Berkeley Distribution      January 26, 1987			       CORE(5)
