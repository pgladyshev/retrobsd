DMC(4)			   Kernel Interfaces Manual			DMC(4)



NNAAMMEE
       dmc - DEC DMC-11/DMR-11 point-to-point communications device

SSYYNNOOPPSSIISS
       //ssyyss//ccoonnff//SSYYSSTTEEMM::
	    NNDDMMCC _d_m_c___c_o_n_t_r_o_l_l_e_r_s     ## DDMMCC1111

DDEESSCCRRIIPPTTIIOONN
       The  _d_m_c	 interface  provides access to a point-to-point	communications
       device which runs at either 1 Mb/s or 56	 Kb/s.	 DMC-11's  communicate
       using the DEC DDCMP link	layer protocol.

       The _d_m_c interface driver	also supports a	DEC DMR-11 providing point-to-
       point communication running at data rates from  2.4  Kb/s  to  1	 Mb/s.
       DMR-11's	are a more recent design and thus are preferred	over DMC-11's.
       The NXMT	and NRCV constants in the driver should	be increased  in  this
       case,  as  the DMR can accept up	to 64 transmit and receive buffers, as
       opposed to 7 for	the DMC.

       The configuration flags specify how to set up the device,
       0 -- full duplex	DDCMP (normal mode)
       1 -- DDCMP Maintence mode (generally useless)
       2 -- DDCMP Half Duplex, primary station
       3 -- DDCMP Half Duplex, secondary station

       Several device error counters are available via "adb", for more	infor-
       mation see the adb script /usr/share/adb/dmcstats, or the DMC11 techni-
       cal manual.

       The host's address must be specified with an SIOCSIFADDR	ioctl, and the
       destination  address  specified with a SIOCSIFDSTADDR ioctl, before the
       interface will transmit or receive any packets.

RROOUUTTIINNGG
       The driver places a HOST	entry in the kernel  routing  tables  for  the
       address	given  in  the SIOCSIFDSTADDR ioctl.  To use the DMC as	a link
       between local nets, the route to	the remote net must be added  manually
       with  the  _r_o_u_t_e(8)  command,  or  by  the  use	of the routing process
       _r_o_u_t_e_d(8) on each end of	the link.

DDIIAAGGNNOOSSTTIICCSS
       ddmmcc%%dd:: bbaadd ccoonnttrrooll %%oo.  A bad parameter was passed to the _d_m_c_l_o_a_d  rou-
       tine.

       ddmmcc%%dd::  uunnkknnoowwnn	aaddddrreessss	 ttyyppee  %%dd.  An input packet was	received which
       contained a type	of address unknown to the driver.

       DDMMCC ffaattaall eerrrroorr 00%%oo.  A fatal error  in	DDMCP  occurred,  causing  the
       device to be restarted.

       DDMMCC ssoofftt	eerrrroorr 00%%oo.  A non-fatal	error in DDMCP has occurred.

       ddmmcc%%dd::  aaff%%dd  nnoott  ssuuppppoorrtteedd.  The interface was	handed a message which
       has addresses formatted in an unsuitable	address	family.

SSEEEE AALLSSOO
       intro(4N), inet(4F)

BBUUGGSS
       The current version of the driver uses a	 link-level  encapsulation  so
       that multiple protocol types may	be used.  It is	thus incompatible with
       earlier drivers,	including the 4.2BSD version.



3rd Berkeley Distribution      October 22, 1996				DMC(4)
