PTY(4)			   Kernel Interfaces Manual			PTY(4)



NNAAMMEE
       pty - pseudo terminal driver

SSYYNNOOPPSSIISS
       //ssyyss//ccoonnff//SSYYSSTTEEMM::
	    NNPPTTYY _p_t_y_s ##	ppsseeuuddoo--tteerrmmiinnaallss,, iinn ggrroouuppss ooff 88

DDEESSCCRRIIPPTTIIOONN
       The  _p_t_y	driver provides	support	for a device-pair termed a _p_s_e_u_d_o _t_e_r_-
       _m_i_n_a_l.  A pseudo	terminal is a pair  of	character  devices,  a	_m_a_s_t_e_r
       device  and  a  _s_l_a_v_e  device.	The slave device provides processes an
       interface identical to that described in	_t_t_y(4).	 However, whereas  all
       other  devices  which  provide the interface described in _t_t_y(4)	have a
       hardware	device of  some	 sort  behind  them,  the  slave  device  has,
       instead,	another	process	manipulating it	through	the master half	of the
       pseudo terminal.	 That is, anything written on  the  master  device  is
       given  to  the  slave device as input and anything written on the slave
       device is presented as input on the master device.

       In configuring, _p_t_y_s specifies the number of pseudo terminal pairs  are
       configured.

       The following _i_o_c_t_l calls apply only to pseudo terminals:

       TIOCSTOP
	      Stops  output  to	 a  terminal  (e.g. like typing	^S).  Takes no
	      parameter.

       TIOCSTART
	      Restarts output (stopped by TIOCSTOP or by typing	^S).  Takes no
	      parameter.

       TIOCPKT
	      Enable/disable  _p_a_c_k_e_t mode.  Packet mode	is enabled by specify-
	      ing (by reference) a nonzero parameter and disabled by  specify-
	      ing (by reference) a zero	parameter.  When applied to the	master
	      side of a	pseudo terminal, each subsequent _r_e_a_d from the	termi-
	      nal  will	 return	 data  written on the slave part of the	pseudo
	      terminal preceded	 by  a	zero  byte  (symbolically  defined  as
	      TIOCPKT_DATA), or	a single byte reflecting control status	infor-
	      mation.  In the latter case, the byte is an inclusive-or of zero
	      or more of the bits:

	      TIOCPKT_FLUSHREAD
		     whenever the read queue for the terminal is flushed.

	      TIOCPKT_FLUSHWRITE
		     whenever the write	queue for the terminal is flushed.

	      TIOCPKT_STOP
		     whenever output to	the terminal is	stopped	a la ^S.

	      TIOCPKT_START
		     whenever output to	the terminal is	restarted.

	      TIOCPKT_DOSTOP
		     whenever _t___s_t_o_p_c is ^S and	_t___s_t_a_r_t_c is ^Q.

	      TIOCPKT_NOSTOP
		     whenever the start	and stop characters are	not ^S/^Q.

	      While this mode is in use, the presence of control status	infor-
	      mation to	be read	from the master	side  may  be  detected	 by  a
	      _s_e_l_e_c_t for exceptional conditions.

	      This  mode  is used by _r_l_o_g_i_n(1C)	and _r_l_o_g_i_n_d(8C)	to implement a
	      remote-echoed, locally ^S/^Q flow-controlled remote  login  with
	      proper  back-flushing of output; it can be used by other similar
	      programs.

       TIOCUCNTL
	      Enable/disable a mode that allows	a small	number of simple  user
	      _i_o_c_t_l commands to	be passed through the pseudo-terminal, using a
	      protocol similar to that of TIOCPKT.  The	TIOCUCNTL and  TIOCPKT
	      modes  are  mutually  exclusive.	 This mode is enabled from the
	      master side of a pseudo terminal by specifying (by reference)  a
	      nonzero  parameter  and  disabled	by specifying (by reference) a
	      zero parameter.  Each subsequent _r_e_a_d from the master side  will
	      return  data  written  on	 the slave part	of the pseudo terminal
	      preceded by a zero byte, or a single byte	reflecting a user con-
	      trol  operation  on the slave side.  A user control command con-
	      sists of a special _i_o_c_t_l operation with no data; the command  is
	      given  as	 UIOCCMD(_n),  where  _n is a number in the range	1-255.
	      The operation value _n will be received as	a single byte  on  the
	      next _r_e_a_d	from the master	side.  The _i_o_c_t_l UIOCCMD(0) is a no-op
	      that may be used to probe	for the	existence  of  this  facility.
	      As  with TIOCPKT mode, command operations	may be detected	with a
	      _s_e_l_e_c_t for exceptional conditions.

       TIOCREMOTE
	      A	mode for the master half of a pseudo terminal, independent  of
	      TIOCPKT.	 This  mode  causes input to the pseudo	terminal to be
	      flow controlled and not input edited (regardless of the terminal
	      mode).   Each  write  to	the control terminal produces a	record
	      boundary for the process reading the terminal.  In normal	usage,
	      a	 write	of data	is like	the data typed as a line on the	termi-
	      nal; a write of 0	bytes is like typing an	end-of-file character.
	      TIOCREMOTE  can be used when doing remote	line editing in	a win-
	      dow manager, or whenever flow controlled input is	required.

FFIILLEESS
       /dev/pty[p-r][0-9a-f]	master pseudo terminals
       /dev/tty[p-r][0-9a-f]	slave pseudo terminals

DDIIAAGGNNOOSSTTIICCSS
       None.



4.2 Berkeley Distribution	 May 19, 1986				PTY(4)
