BR(4)			   Kernel Interfaces Manual			 BR(4)



NNAAMMEE
       br - EATON BR1537/BR1711	1538[A,B,C,D] moving head disk

SSYYNNOOPPSSIISS
       //ssyyss//ccoonnff//SSYYSSTTEEMM::
	    NNBBRR	 _b_r___d_r_i_v_e_s ## EEAATTOONN 11553377//11771111,, EEAATTOONN 11553388AA,, BB,, CC,, DD

       //eettcc//ddttaabb::
	    ##NNaammee UUnniitt##	AAddddrr   VVeeccttoorr BBrr HHaannddlleerr((ss))	 ## CCoommmmeennttss
	    bbrr	  ??	117766771100 225544    55	 bbrriinnttrr		 ## EEaattoonn 11553377//88

       mmaajjoorr ddeevviiccee nnuummbbeerr((ss))::
	    rraaww:: 2200
	    bblloocckk:: 1111
       mmiinnoorr ddeevviiccee eennccooddiinngg::
	    bbiittss 00000077 ssppeecciiffyy ppaarrttiittiioonn	ooff BBRR ddrriivvee
	    bbiittss 00007700 ssppeecciiffyy BBRR ddrriivvee

DDEESSCCRRIIPPTTIIOONN
       Files  with  minor device numbers 0 through 7 refer to various portions
       of drive	0; minor devices 8 through 15 refer to drive  1,  etc.	 There
       are  four  drive	 types	supported  by the Eaton	BR1537 and BR1711 con-
       trollers, these are the 1538A (50 Mb), 1538B (80	Mb),  1538C  (200  Mb)
       and  1538D  (300	Mb).  Capacities are unformatted megabytes.  The stan-
       dard device names begin with ``br'' followed by the  drive  number  and
       then  a	letter	a-h  for partitions 0-7	respectively.  The character ?
       stands here for a drive number in the range 0-7.

       The block files access the disk via the system's	normal buffering mech-
       anism  and  may	be  read  and  written without regard to physical disk
       records.	 There is also a `raw' interface  which	 provides  for	direct
       transmission  between  the disk and the user's read or write buffer.  A
       single read or write call results in  exactly  one  I/O	operation  and
       therefore  raw  I/O  is considerably more efficient when	many words are
       transmitted.  The names of the raw files	conventionally begin  with  an
       extra `r.'

       In  raw I/O the buffer must begin on a word (even) boundary, and	counts
       should be a multiple of 512 bytes (a disk sector).  Likewise _s_e_e_k calls
       should specify a	multiple of 512	bytes.

DDIISSKK SSUUPPPPOORRTT
       The size	(in sectors) of	the pseudo-disks on each drive are as follows:

       1538A partitions:
	    disk   length      cyls	     comments
	    br?a    18260   0  - 165	     1538A has 22 sec/trk, 5 trk/cyl
	    br?b    12210  166 - 276
	    br?c    59180  277 - 814
	    br?d    unused
	    br?e    unused
	    br?f    unused
	    br?g    unused
	    br?h    89650   0  - 814

       1538B partitions:
	    disk   length      cyls	     comments
	    br?a    18400   0  - 114	     1538B has 32 sec/trk, 5 trk/cyl
	    br?b    12320  115 - 190
	    br?c    99840  191 - 814
	    br?d    unused
	    br?e    unused
	    br?f    unused
	    br?g    unused
	    br?h    99840   0  - 814

       1538C partitions:
	    disk   length      cyls	     comments
	    br?a    18392   0  - 43	     1538C has 22 sec/trk, 19 trk/cyl
	    br?b    12122  44  - 72
	    br?c   231990  73 -	627
	    br?d    78166 628 -	814
	    br?e    unused
	    br?f    unused
	    br?g    unused
	    br?h   340670   0  - 814

       1538D partitions:
	    disk   length      cyls	     comments
	    br?a    18240   0  - 29	     1538D has 32 sec/trk, 19 trk/cyl
	    br?b    12160  30  - 49
	    br?c   232256  50 -	431
	    br?d   232256 432 -	813
	    br?e    unused
	    br?f    unused
	    br?g    unused
	    br?h   495520   0  - 814

FFIILLEESS
       /dev/br[0-7][a-h]   block files
       /dev/rbr[0-7][a-h]  raw files
       /dev/MAKEDEV	   script to create special files
       /dev/MAKEDEV.local  script to localize special files

SSEEEE AALLSSOO
       ra(4),  ram(4),	rk(4),	rl(4),	rx(4), si(4), xp(4), dtab(5), autocon-
       fig(8)

DDIIAAGGNNOOSSTTIICCSS
       bbrr%%dd%%cc:: hhaarrdd eerrrroorr ssnn%%dd ccss22==%%bb ddss==%%bb  eerr==%%bb.   An  unrecoverable	 error
       occurred	 during	transfer of the	specified sector of the	specified disk
       partition.  The contents	of the cs2, ds and er registers	are printed in
       octal  and  symbolically	with bits decoded.  The	error was either unre-
       coverable, or a large number of retry attempts (including offset	 posi-
       tioning and drive recalibration)	could not recover the error.

BBUUGGSS
       In  raw	I/O  _r_e_a_d and _w_r_i_t_e(2) truncate	file offsets to	512-byte block
       boundaries, and _w_r_i_t_e scribbles	on  the	 tail  of  incomplete  blocks.
       Thus,  in  programs  that are likely to access raw devices, _r_e_a_d_, _w_r_i_t_e
       and _l_s_e_e_k(2) should always deal in 512-byte multiples.

       DEC-standard error logging should be supported.

       A program to analyze the	logged error information (even in its  present
       reduced form) is	needed.

       The  partition  tables  for the file systems should be read off of each
       pack, as	they are never quite what any single installation  would  pre-
       fer, and	this would make	packs more portable.

       Only  the  1538D	(300Mb)	disk has been used with	this driver, the _d_i_s_k_-
       _t_a_b(5) file and _n_e_w_f_s(8)	program	only know about	the 1538D.



3rd Berkeley Distribution	August 20, 1988				 BR(4)
