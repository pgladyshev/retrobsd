RX(4)			   Kernel Interfaces Manual			 RX(4)



NNAAMMEE
       rx - DEC	RX02 floppy disk

SSYYNNOOPPSSIISS
       //ssyyss//ccoonnff//SSYYSSTTEEMM::
	    NNRRXX	 _r_x___u_n_i_t_s  ## RRXX0022

       //eettcc//ddttaabb::
	    ##NNaammee UUnniitt##	AAddddrr   VVeeccttoorr BBrr HHaannddlleerr((ss))	 ## CCoommmmeennttss
	    rrxx	  ??	117777117700 226644    55	 rrxxiinnttrr		 ## rrxx0022

       mmaajjoorr ddeevviiccee nnuummbbeerr((ss))::
	    rraaww:: 1177
	    bblloocckk:: 88
       mmiinnoorr ddeevviiccee eennccooddiinngg::
	    bbiitt	0011 ssppeecciiffiieess ddrriivvee:: <<rrxx__ddrriivvee>>
	    bbiitt	0022 ssppeecciiffiieess ddeennssiittyy:: ssiinnggllee:: 00,, ddoouubbllee:: 11

DDEESSCCRRIIPPTTIIOONN
       The _r_x device provides access to	a DEC RX02 floppy disk unit with M8256
       interface module	(RX211 configuration).	The RX02 uses 8-inch,  single-
       sided, soft-sectored floppy disks (with pre-formatted industry-standard
       headers)	in either single or double density.

       Floppy disks handled by the RX02	contain	77 tracks, each	with  26  sec-
       tors  (for a total of 2,002 sectors).  The sector size is 128 bytes for
       single density, 256 bytes for double density.  Single density disks are
       compatible  with	 the  RX01  floppy  disk unit and with IBM 3740	Series
       Diskette	1 systems.

       Files with minor	device numbers 0 and 1 refer to	drives 0 and 1 in sin-
       gle density mode; minor devices 2 and 3 refer to	drives 0 and 1 in dou-
       ble density mode.  The standard device names begin with ``rx'' followed
       by the drive number and then a letter a-b for single and	double density
       access to the drive respectively.  The character	? stands  here	for  a
       drive number in the range 0-1.

       The block files access the disk via the system's	normal buffering mech-
       anism and may be	read and  written  without  regard  to	physical  disk
       records.	  There	 is  also  a `raw' interface which provides for	direct
       transmission between the	disk and the user's read or write  buffer.   A
       single  read  or	 write	call  results in exactly one I/O operation and
       therefore raw I/O is considerably more efficient	when  many  words  are
       transmitted.   The  names of the	raw files conventionally begin with an
       extra `r.'

       In raw I/O the buffer must begin	on a word (even) boundary, and	counts
       should be a multiple of the disk's sector size (either 128 or 256 bytes
       depending on selected density.)	Likewise _s_e_e_k calls should  specify  a
       multiple	of the disk's sector size.

       In addition to normal (`block' and `raw') i/o, the driver supports for-
       matting of disks	for either density.

DDIISSKK SSUUPPPPOORRTT
       The _r_x driver does not support pseudo-disks  (partitions).   Each  file
       _r_x_?_[_a_b_]	refers	to the entire drive as a single	sequentially addressed
       file.  The physical disk	sector size is 128 bytes  for  single  density
       and  256	 bytes	for  double  density.	The logical block size is 1024
       bytes.  Each diskette has 250 logical blocks in single density and  500
       logical blocks in double	density.

       The size	and density of the disks are specified as follows:

	    disk  minor	device	unit  density
	    rx0a  0		0     single
	    rx1a  1		1     single
	    rx0b  2		0     double
	    rx1b  3		1     double

       Even though the storage capacity	on a floppy disk is quite small, it is
       possible	to make	file systems on	them.  For example, the	commands
	      %	rxformat /dev/rrx0a
	      %	newfs /dev/rrx0a
       and
	      %	rxformat /dev/rrx1b
	      %	newfs /dev/rrx1b
       format and make file systems on the single density  disk	 in  the  left
       drive  and  the double density disk in the right	drive with 241 and 486
       kbytes available, respectively, for file	storage.  Using	 _t_a_r(1)	 gives
       somewhat	 more  efficient  utilization  of the available	space for file
       storage.	 The RX02 disks	are primarily useful for  small	 archives  and
       transfer	of small systems or distributions.

       An _i_o_c_t_l(2) call	is available is	available to format RX02 disks:
	      ##iinncclluuddee <<ppddppuubbaa//rrxxrreegg..hh>>
	      iiooccttll((ffiillddeess,, RRXXIIOOCC__FFOORRMMAATT))
       The density is determined by the	device opened.

FFIILLEESS
       /dev/rx[01][ab]	   block files
       /dev/rrx[01][ab]	   raw files
       /dev/MAKEDEV	   script to create special files
       /dev/MAKEDEV.local  script to localize special files

SSEEEE AALLSSOO
       hk(4), ra(4), ram(4), rk(4), rl(4), rp(4), si(4), xp(4),	dtab(5), auto-
       config(8), rxformat(8V)

DDIIAAGGNNOOSSTTIICCSS
       rrxx22%%dd:: hhaarrdd eerrrroorr ssnn%%dd ccss==%%bb eerr==%%bb.  An	unrecoverable  error  occurred
       during  transfer	 of  the  specified sector of the specified disk.  The
       contents	of the two error registers are also printed in octal and  sym-
       bolically  with bits decoded.  The error	was either unrecoverable, or a
       large number of retry attempts could not	recover	the error.

BBUUGGSS
       In raw I/O _r_e_a_d and _w_r_i_t_e(2) truncate file offsets to disk sector  size
       block  boundaries  (either  128	or 256 bytes depending on the selected
       density), and _w_r_i_t_e scribbles on	the tail of incomplete blocks.	 Thus,
       in  programs  that  are	likely	to access raw devices, _r_e_a_d_, _w_r_i_t_e and
       _l_s_e_e_k(2)	should always deal in disk sector size multiples.

       DEC-standard error logging should be supported.

       A program to analyze the	logged error information (even in its  present
       reduced form) is	needed.

       The  4.3BSD rx driver which supports more capabilities should be	ported
       to 2.11BSD.



3rd Berkeley Distribution      January 27, 1996				 RX(4)
