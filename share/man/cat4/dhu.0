DHU(4)			   Kernel Interfaces Manual			DHU(4)



NNAAMMEE
       dhu - DHU-11 communications multiplexer

SSYYNNOOPPSSIISS
       //ssyyss//ccoonnff//SSYYSSTTEEMM::
	    NNDDHHUU _d_h_u___u_n_i_t_s ## DDHHUU1111

       //eettcc//ddttaabb::
	    ##NNaammee UUnniitt##	AAddddrr   VVeeccttoorr BBrr HHaannddlleerr((ss))	 ## CCoommmmeennttss
	    dduu	  ??	116600002200 331100    55	 ddhhuurriinntt ddhhuuxxiinntt ## ddhhuu1111 tteerrmmiinnaall mmuuxx

       mmaajjoorr ddeevviiccee nnuummbbeerr((ss))::
	    rraaww:: 44
       mmiinnoorr ddeevviiccee eennccooddiinngg::
	    bbiittss 00001177 ssppeecciiffyy lliinnee oonn DDHHUU uunniitt
	    bbiittss 00006600 ssppeecciiffyy DDHHUU uunniitt
	    bbiitt	 00110000 ssppeecciiffyy RRTTSS//CCTTSS ffllooww ccoonnttrrooll
	    bbiitt	 00220000 ssppeecciiffiieess	nnoonn--bblloocckkiinngg ooppeenn ((````CCDD	aallwwaayyss oonn''''))

DDEESSCCRRIIPPTTIIOONN
       A DHU-11	provides 16 communication lines.

       Each  line attached to the DHU-11 communications	multiplexer behaves as
       described in _t_t_y(4).  Input and output for each line may	 independently
       be  set	to  run	 at  any  of 13	speeds (50, 200	and 38400 baud are not
       available); see _t_t_y(4) for the encoding.

       Bit _0_2_0_0	of the minor device number for DHU lines may  be  set  to  say
       that  a	line  is  not  properly	connected, and that the	line should be
       treated as hard-wired with carrier always present.  Thus	 creating  the
       special	character  device  node	 "4, 130" via _m_k_n_o_d _/_d_e_v_/_t_t_y_S_2 _c _4 _1_3_0
       would cause line	ttyS2 to be treated in this way.   Turning  on	bit  6
       (adding	64)  to	 the  minor device number via _m_k_n_o_d _/_d_e_v_/_t_t_y_S_2 _c _4 _1_9_4
       enables RTS/CTS flow control.

       The DHU-11 driver normally uses input silos and delays receiver	inter-
       rupts  by 20 milliseconds rather	than taking an interrupt on each input
       character.

FFIILLEESS
       /dev/tty[S-Z][0-9a-f]

SSEEEE AALLSSOO
       tty(4)

DDIIAAGGNNOOSSTTIICCSS
       ddhhuu((%%dd,,%%dd)) NNXXMM.	No response from UNIBUS	on a  DMA  transfer  within  a
       timeout	period.	  This	has  never  been  observed  on a PDP-11	and is
       believed	to be a	carryover from the VAX driver when it was ported.   It
       is not serious.

       ddhhuu%%dd %%dd	oovveerrrruunnss.  The character input silo overflowed before it could
       be serviced.  This message is printed only at line  close  time	rather
       than  on	 each overrun error.  Kernel printf's are not interrupt	driven
       and caused more overruns	by blocking interrupts for lengthy periods  of
       time.

NNOOTTEESS
       The  driver  currently does not make full use of	the hardware capabili-
       ties of the DHU-11, for dealing with  XON/XOFF  flow-control  or	 hard-
       wired lines for example.

       The 4 40-way cables are a pain.



3rd Berkeley Distribution	 May 31, 1997				DHU(4)
