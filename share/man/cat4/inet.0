INET(4F)							      INET(4F)



NNAAMMEE
       inet - Internet protocol	family

SSYYNNOOPPSSIISS
       ##iinncclluuddee	<<ssyyss//ttyyppeess..hh>>
       ##iinncclluuddee	<<nneettiinneett//iinn..hh>>

DDEESSCCRRIIPPTTIIOONN
       The  Internet protocol family is	a collection of	protocols layered atop
       the _I_n_t_e_r_n_e_t _P_r_o_t_o_c_o_l (IP) transport layer, and utilizing the  Internet
       address	format.	 The Internet family provides protocol support for the
       SOCK_STREAM, SOCK_DGRAM,	and SOCK_RAW socket types; the SOCK_RAW	inter-
       face provides access to the IP protocol.

AADDDDRREESSSSIINNGG
       Internet	addresses are four byte	quantities, stored in network standard
       format: layed out as highest to lowest order bytes in memory  or	 ``Big
       Endian''	 (the VAX is word and byte reversed, or	``Little Endian''; the
       PDP-11 is byte reversed within each word, or ``Middle  Endian'').   The
       include	file  <_n_e_t_i_n_e_t_/_i_n_._h>  defines  this address as a discriminated
       union.

       Sockets bound to	the Internet protocol  family  utilize	the  following
       addressing structure,

       struct sockaddr_in {
	      short	sin_family;
	      u_short	sin_port;
	      struct	in_addr	sin_addr;
	      char	sin_zero[8];
       };

       Sockets	may  be	 created  with	the local address INADDR_ANY to	effect
       "wildcard" matching on incoming messages.  The address in a  _c_o_n_n_e_c_t(2)
       or  _s_e_n_d_t_o(2)  call  may	 be given as INADDR_ANY	to mean	``this host.''
       The distinguished address INADDR_BROADCAST is allowed  as  a  shorthand
       for  the	 broadcast address on the primary network if the first network
       configured supports broadcast.

PPRROOTTOOCCOOLLSS
       The Internet protocol family is comprised of the	IP transport protocol,
       Internet	Control	Message	Protocol (ICMP), Transmission Control Protocol
       (TCP), and User Datagram	Protocol (UDP).	 TCP is	used  to  support  the
       SOCK_STREAM  abstraction	 while	UDP  is	used to	support	the SOCK_DGRAM
       abstraction.  A raw interface to	IP is available	by creating an	Inter-
       net  socket  of type SOCK_RAW.  The ICMP	message	protocol is accessible
       from a raw socket.

       The 32-bit Internet address contains both network and host  parts.   It
       is  frequency-encoded;  the  most-significant  bit  is clear in Class A
       addresses, in which the high-order  8  bits  are	 the  network  number.
       Class  B	addresses use the high-order 16	bits as	the network field, and
       Class C addresses have a	24-bit network part.  Sites with a cluster  of
       local  networks and a connection	to the DARPA Internet may chose	to use
       a single	network	number for the cluster;	this is	done by	 using	subnet
       addressing.   The local (host) portion of the address is	further	subdi-
       vided into subnet and host parts.  Within a subnet, each	subnet appears
       to  be an individual network; externally, the entire cluster appears to
       be a single, uniform network requiring only  a  single  routing	entry.
       Subnet  addressing  is  enabled	and examined by	the following _i_o_c_t_l(2)
       commands	on a datagram socket in	the Internet  domain;  they  have  the
       same form as the	SIOCIFADDR command (see	_i_n_t_r_o(4N)).

       SIOCSIFNETMASK	   Set	interface  network  mask.   The	 network  mask
			   defines the network part of the address; if it con-
			   tains  more	of  the	 address than the address type
			   would indicate, then	subnets	are in use.

       SIOCGIFNETMASK	   Get interface network mask.

SSEEEE AALLSSOO
       ioctl(2), socket(2), intro(4N), tcp(4P),	udp(4P), ip(4P), icmp(4P)

       An Introductory 4.3BSD Interprocess Communication Tutorial (PS1:7).

       An Advanced 4.3BSD Interprocess Communication Tutorial (PS1:8).

CCAAVVEEAATT
       The Internet protocol support is	subject	to change as the Internet pro-
       tocols  develop.	  Users	 should	 not  depend on	details	of the current
       implementation, but rather the services exported.



4.2 Berkeley Distribution	August 1, 1987			      INET(4F)
