MAKEKEY(8)		    System Manager's Manual		    MAKEKEY(8)



NNAAMMEE
       makekey - generate encryption key

SSYYNNOOPPSSIISS
       //uussrr//ssbbiinn//mmaakkeekkeeyy

DDEESSCCRRIIPPTTIIOONN
       _M_a_k_e_k_e_y	improves  the  usefulness of encryption	schemes	depending on a
       key by increasing the amount of time required to	search the key	space.
       It  reads  10 bytes from	its standard input, and	writes 13 bytes	on its
       standard	output.	 The output depends on the input in a way intended  to
       be  difficult to	compute	(that is, to require a substantial fraction of
       a second).

       The first eight input bytes (the	_i_n_p_u_t  _k_e_y)  can  be  arbitrary	 ASCII
       characters.   The  last	two (the _s_a_l_t) are best	chosen from the	set of
       digits, upper- and lower-case letters, and `.' and `/'.	The salt char-
       acters  are  repeated  as  the first two	characters of the output.  The
       remaining 11 output characters are chosen from the same set as the salt
       and constitute the _o_u_t_p_u_t _k_e_y_.

       The  transformation performed is	essentially the	following: the salt is
       used to select one of 4096 cryptographic	 machines  all	based  on  the
       National	 Bureau	 of Standards DES algorithm, but modified in 4096 dif-
       ferent ways.  Using the input key as key, a constant string is fed into
       the  machine and	recirculated a number of times.	 The 64	bits that come
       out are distributed into	the 66 useful key bits in the result.

       _M_a_k_e_k_e_y is intended for programs	that perform encryption	(for instance,
       _e_d and _c_r_y_p_t(1)).  Usually makekey's input and output will be pipes.

SSEEEE AALLSSOO
       crypt(1), ed(1)



7th Edition		       October 23, 1996			    MAKEKEY(8)
