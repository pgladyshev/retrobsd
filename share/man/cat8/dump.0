DUMP(8)			    System Manager's Manual		       DUMP(8)



NNAAMMEE
       dump - incremental file system dump

SSYYNNOOPPSSIISS
       dduummpp [0123456789BchfusTdWwn [_a_r_g_u_m_e_n_t ...]] [filesystem]

DDEESSCCRRIIPPTTIIOONN
       _D_u_m_p  copies to magnetic	tape all files changed after a certain date in
       the _f_i_l_e_s_y_s_t_e_m_.

       The following options are supported by dump:

       00--99  This number	is the `dump level'.  All  files  modified  since  the
	    last  date stored in the file _/_e_t_c_/_d_u_m_p_d_a_t_e_s for the same filesys-
	    tem	at lesser levels will be dumped.  If no	date is	determined  by
	    the	 level,	 the  beginning	 of time is assumed; thus the option 00
	    causes the entire filesystem to be dumped.

       BB rreeccoorrddss
	    The	number of dump records per volume.  This option	overrides  the
	    calculation	of tape	size based on length and density.

       cc    This option	requires no further options.  Used to specify that the
	    tape is a _c_a_r_t_r_i_d_g_e	drive rather than a 9-track.

       hh lleevveell
	    Honor the user 'nodump' flags only for dumps at or above the given
	    lleevveell.   The default honor level is	1, so that incremental backups
	    omit such files but	full backups retain them.

       ff    Place the dump on the next _a_r_g_u_m_e_n_t	file instead of	the tape.   If
	    '-'	is given then standard out (stdout) is written to.

       uu    If	the  dump completes successfully, write	the date of the	begin-
	    ning of the	dump on	file _/_e_t_c_/_d_u_m_p_d_a_t_e_s_.  This file	records	a sep-
	    arate date for each	filesystem and each dump level.	 The format of
	    _/_e_t_c_/_d_u_m_p_d_a_t_e_s is readable by people, consisting of	one free  for-
	    mat	record per line: filesystem name, increment level and _c_t_i_m_e_(_3_)
	    format dump	date.  _/_e_t_c_/_d_u_m_p_d_a_t_e_s may be edited to change  any  of
	    the	fields,	if necessary.  Note that _/_e_t_c_/_d_u_m_p_d_a_t_e_s	is in a	format
	    different from that	which previous versions	of _d_u_m_p	maintained  in
	    _/_e_t_c_/_d_d_a_t_e_,	although the information content is identical.

       ss    The	 size  of  the	dump tape is specified in feet.	 The number of
	    feet is taken from the next	_a_r_g_u_m_e_n_t_.  When	the specified size  is
	    reached, _d_u_m_p will wait for	reels to be changed.  The default tape
	    size is 2300 feet.

       dd    The	density	of the tape, expressed in BPI, is taken	from the  next
	    _a_r_g_u_m_e_n_t_.  This is used in calculating the amount of tape used per
	    reel. The default is 1600.

       TT ddaattee
	    Use	the specified date as the starting time	for the	 dump  instead
	    of the time	determined from	looking	in //eettcc//dduummppddaatteess.  The	format
	    of ddaattee is the same	as that	of _c_t_i_m_e_(_3_).  This  option  is	useful
	    for	 automated  dump  scripts  that	 wish  to dump over a specific
	    period of time.  The TT option is mutually  exclusive  with	the  uu
	    option.

       WW    _D_u_m_p tells the operator what file systems need to be dumped.  This
	    information	 is  gleaned  from  the	  files	  _/_e_t_c_/_d_u_m_p_d_a_t_e_s   and
	    _/_e_t_c_/_f_s_t_a_b_.	  The WW	option causes _d_u_m_p to print out, for each file
	    system in _/_e_t_c_/_d_u_m_p_d_a_t_e_s the most recent dump date and level,  and
	    highlights	those  file  systems  that should be dumped.  If the WW
	    option is set, all other options are ignored, and _d_u_m_p exits imme-
	    diately.

       ww    Is	like  W,  but  prints  only those filesystems which need to be
	    dumped.

       nn    Whenever _d_u_m_p requires operator attention, notify by means similar
	    to a _w_a_l_l_(_1_) all of	the operators in the group "operator".

       If  no  arguments  are given, the _k_e_y is	assumed	to be 99uu and a default
       file system is dumped to	the default tape.

       _D_u_m_p requires operator intervention on these conditions:	end  of	 tape,
       end  of	dump, tape write error,	tape open error	or disk	read error (if
       there are more than a threshold of 32).	In addition  to	 alerting  all
       operators  implied  by  the  nn key, _d_u_m_p	interacts with the operator on
       _d_u_m_p_'_s control terminal at times	when _d_u_m_p can no longer	proceed, or if
       something  is grossly wrong.  All questions _d_u_m_p	poses mmuusstt be answered
       by typing "yes" or "no",	appropriately.

       Since making a dump involves a lot of time and effort for  full	dumps,
       _d_u_m_p  checkpoints  itself at the	start of each tape volume.  If writing
       that volume fails for some reason, _d_u_m_p will, with operator permission,
       restart	itself from the	checkpoint after the old tape has been rewound
       and removed, and	a new tape has been mounted.

       _D_u_m_p tells the operator what is going on	at periodic intervals, includ-
       ing  usually low	estimates of the number	of blocks to write, the	number
       of tapes	it will	take, the time to completion, and the time to the tape
       change.	 The  output is	verbose, so that others	know that the terminal
       controlling _d_u_m_p	is busy, and will be for some time.

       Now a short suggestion on how to	perform	 dumps.	  Start	 with  a  full
       level 0 dump

	    dump 0un

       Next,  dumps of active file systems are taken on	a daily	basis, using a
       modified	Tower of Hanoi algorithm, with this sequence of	dump levels:
			       3 2 5 4 7 6 9 8 9 9 ...
       For the daily dumps, a set of 10	tapes per dumped file system  is  used
       on a cyclical basis.  Each week,	a level	1 dump is taken, and the daily
       Hanoi sequence repeats with 3.  For weekly dumps, a set of 5 tapes  per
       dumped  file  system  is	used, also on a	cyclical basis.	 Each month, a
       level 0 dump is taken on	a set of fresh tapes that is saved forever.

FFIILLEESS
       /dev/rxp0a      default filesystem to dump from
       /dev/rmt0       default tape unit to dump to
       /etc/ddate      old format dump date record (obsolete after --JJ option)
       /etc/dumpdates  new format dump date record
       /etc/fstab      Dump table: file	systems	and frequency
       /etc/group      to find group _o_p_e_r_a_t_o_r

SSEEEE AALLSSOO
       restor(8), rdump(8), dump(5), fstab(5), dumpdir(8)

DDIIAAGGNNOOSSTTIICCSS
       Many, and verbose.

BBUUGGSS
       Sizes are based on 1600 BPI blocked tape; the raw magtape device	has to
       be  used	to approach these densities.  Fewer than 32 read errors	on the
       filesystem are ignored.	Each reel requires a new  process,  so	parent
       processes  for  reels already written just hang around until the	entire
       tape is written.

       It would	be nice	if _d_u_m_p	knew about the dump sequence,  kept  track  of
       the tapes scribbled on, told the	operator which tape to mount when, and
       provided	more assistance	for the	operator running _r_e_s_t_o_r_.



4th Berkeley Distribution					       DUMP(8)
